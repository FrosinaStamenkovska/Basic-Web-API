// <auto-generated />
using AspektAssignment.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspektAssignment.DataAccess.Migrations
{
    [DbContext(typeof(AspektDbContext))]
    [Migration("20240617173344_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspektAssignment.Domain.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Google"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Amazon"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Microsoft"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Tesla"
                        });
                });

            modelBuilder.Entity("AspektAssignment.Domain.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CountryId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            CountryId = 1,
                            Name = "Contact1"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            CountryId = 1,
                            Name = "Contact2"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 3,
                            CountryId = 2,
                            Name = "Contact3"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            CountryId = 2,
                            Name = "Contact4"
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 4,
                            CountryId = 5,
                            Name = "Contact5"
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 5,
                            CountryId = 1,
                            Name = "Contact6"
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 1,
                            CountryId = 1,
                            Name = "Contact7"
                        },
                        new
                        {
                            Id = 8,
                            CompanyId = 2,
                            CountryId = 1,
                            Name = "Contact8"
                        },
                        new
                        {
                            Id = 9,
                            CompanyId = 3,
                            CountryId = 2,
                            Name = "Contact9"
                        },
                        new
                        {
                            Id = 10,
                            CompanyId = 2,
                            CountryId = 2,
                            Name = "Contact10"
                        },
                        new
                        {
                            Id = 11,
                            CompanyId = 4,
                            CountryId = 5,
                            Name = "Contact11"
                        },
                        new
                        {
                            Id = 12,
                            CompanyId = 5,
                            CountryId = 1,
                            Name = "Contact12"
                        },
                        new
                        {
                            Id = 13,
                            CompanyId = 5,
                            CountryId = 2,
                            Name = "Contact13"
                        },
                        new
                        {
                            Id = 14,
                            CompanyId = 4,
                            CountryId = 5,
                            Name = "Contact14"
                        },
                        new
                        {
                            Id = 15,
                            CompanyId = 5,
                            CountryId = 1,
                            Name = "Contact15"
                        });
                });

            modelBuilder.Entity("AspektAssignment.Domain.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Macedonia"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Holland"
                        },
                        new
                        {
                            Id = 3,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 4,
                            Name = "France"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Spain"
                        });
                });

            modelBuilder.Entity("AspektAssignment.Domain.Models.Contact", b =>
                {
                    b.HasOne("AspektAssignment.Domain.Models.Company", "Company")
                        .WithMany("Contacts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspektAssignment.Domain.Models.Country", "Country")
                        .WithMany("Contacts")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("AspektAssignment.Domain.Models.Company", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("AspektAssignment.Domain.Models.Country", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
